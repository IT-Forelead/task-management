name: Pipeline

on:
  push:
    branches: [ "main" ]
jobs:
  build:
    name: BUILD
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        scala: [ 2.13.10 ]
        java: [ temurin@11 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (fast)
        uses: actions/checkout@v3

      - name: Download Java (temurin@11)
        id: download-java-temurin-11
        uses: typelevel/download-java@v1
        with:
          distribution: temurin
          java-version: 11

      - name: Setup Java (temurin@11)
        uses: actions/setup-java@v2
        with:
          distribution: jdkfile
          java-version: 11
          jdkFile: ${{ steps.download-java-temurin-11.outputs.jdkFile }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: "Building base image 🏗"
        run: |
          cd ./build
          bash base.sh
          docker images

      - name: "Building image 🏗"
        run: |
          sbt docker:publishLocal
          docker images
          docker save ptpger-endpoints:latest > ./backend.tar.gz

      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "backend.tar.gz"
          target: "task-management"

  deploy:
    name: DEPLOY
    runs-on: ubuntu-latest
    needs: ["build"]
    steps:
      - name: Install SSH key of timeweb
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd task-management
            docker load -i backend.tar.gz
            bash run
            docker restart nginx